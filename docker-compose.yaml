

services:
  hrm-api:
    container_name: hrm-api
    build:
      context: .docker/hrm-api/dev
      dockerfile: dev.dockerFile
    ports:
      - "8080:8080"
    volumes:
      - ./hrm-api:/app/hrm-api
      - m2_data:/root/.m2
    environment:
      - UID=${UID}
      - GID=${GID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres-db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    depends_on:
      - postgres-db
    networks:
      - hrm-network

  hrm-front:
    container_name: hrm-front
    build: 
      context: .docker/hrm-front/dev
      dockerfile: dev.dockerFile
    ports:
      - "3000:3000"
    volumes:
      - ./hrm-front:/app/hrm-front
    environment:
      - GID=${GID}
      - UID=${UID}
    networks:
      - hrm-network

  postgres-admin:
    container_name: postgres-admin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - hrm-network
    restart: unless-stopped
  
  postgres-db:
    container_name: postgres-db
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - hrm-network


networks:
  hrm-network:
    driver: bridge
volumes:
  pg_data:
  # maven dependency cache
  m2_data:
  pgadmin:

# docker compose down containername -v -- down and remove volumes
# docker compose up -d -- build -- build and run in detached mode
# docker compose logs -f -- follow logs
# docker compose exec hrm-api bash -- enter the hrm-api container
# docker compose exec postgres-db bash -- enter the postgres-db container
