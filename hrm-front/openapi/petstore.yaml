openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetsArray"
              example:
                - id: 1
                  name: Fluffy
                  age: 5
                  tag: "123-45-6789"
                  email: "fluffy@example.com"
                  callingCode: "+420"
                  country: "Uruguay"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 500
                message: Internal server error
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - tag
              properties:
                name:
                  type: string
                tag:
                  type: string
            example:
              name: Max
              tag: "555-66-7777"
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 400
                message: Bad request
  /pets-nested-array:
    get:
      summary: List all pets as nested array
      operationId: listPetsNestedArray
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetsNestedArray"
              example:
                data:
                  - id: 1
                    name: Bella
                    age: 3
                    tag: "987-65-4321"
                    email: "bella@example.com"
                    callingCode: "+33"
                    country: "People's Republic of China"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 404
                message: Not found
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
        - name: testId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
              example:
                id: 42
                name: Rex
                age: 7
                tag: "321-54-9876"
                email: "rex@example.com"
                callingCode: "+33"
                country: "Uruguay"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                code: 400
                message: Invalid ID supplied
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name:
          type: string
          description: "Name of pet"
          minLength: 0
          maxLength: 40
          example: "Fluffy"
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 30
          exclusiveMinimum: true
          exclusiveMaximum: true
          example: 5
        tag:
          type: string
          pattern: '^\\d{3}-\\d{2}-\\d{4}$'
          nullable: true
          example: "123-45-6789"
        email:
          type: string
          format: email
          example: "fluffy@example.com"
        callingCode:
          type: string
          enum: ["+33", "+420", "+33"]
          example: "+420"
        country:
          type: string
          enum: ["People's Republic of China", "Uruguay"]
          example: "Uruguay"
    PetsNestedArray:
      type: object
      required:
        - pets
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Pet"
    PetsArray:
      type: array
      minItems: 1
      maxItems: 20
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: "Something went wrong"
